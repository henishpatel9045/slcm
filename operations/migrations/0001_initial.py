# Generated by Django 3.2.7 on 2022-10-07 09:29

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('custom_users', '0004_student_email'),
        ('entities', '0003_alter_school_highest_standard'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('years', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('months', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(11)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cources', to='entities.college')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_year', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('Completed', 'Completed'), ('In Progress', 'In Progress'), ('Dropout', 'Dropout')], default='In Progress', max_length=100)),
                ('enrolled_via', models.CharField(blank=True, choices=[('New Registration', 'New Registration'), ('Via Transfer Certificate', 'Via Transfer Certificate')], default='New Registration', max_length=100, null=True)),
                ('date_of_admission', models.DateField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollement', to='entities.institute')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollement', to='custom_users.student')),
            ],
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('total_years', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stream', to='entities.college')),
            ],
            options={
                'unique_together': {('name', 'college')},
            },
        ),
        migrations.CreateModel(
            name='TransferCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_id', models.CharField(blank=True, max_length=100, unique=True)),
                ('current_standard', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('paid_all_fees', models.BooleanField(default=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_of_admission', models.DateField(blank=True)),
                ('should_promote', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_transfer_certificate', to='entities.institute')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_certificate', to='custom_users.student')),
                ('used_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfer_certificate', to='entities.institute')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cources', to='entities.school')),
            ],
        ),
        migrations.CreateModel(
            name='StudentStreamEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stream_enrollment', to='operations.enrollement')),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stream_enrollment', to='operations.stream')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stream_enrollment', to='custom_users.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentSchoolData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curent_year', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('Completed', 'Completed'), ('In Progress', 'In Progress'), ('Dropout', 'Dropout')], default='In Progress', max_length=100)),
                ('stream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='current_stream', to='operations.stream')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_stream', to='custom_users.student')),
            ],
        ),
        migrations.AddField(
            model_name='enrollement',
            name='transfer_certificate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='enrollement', to='operations.transfercertificate'),
        ),
        migrations.CreateModel(
            name='StudentSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standard', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_subjects', to='custom_users.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_subjects', to='operations.subject')),
            ],
            options={
                'unique_together': {('student', 'subject', 'standard')},
            },
        ),
        migrations.CreateModel(
            name='StudentCource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_year', models.IntegerField(default=2021, validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cources', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='operations.cource')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_cources', to='custom_users.student')),
            ],
            options={
                'unique_together': {('student', 'cources', 'enrolled_year')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='enrollement',
            unique_together={('student', 'institute', 'current_year')},
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2021, validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2100)])),
                ('attended_days', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(31)])),
                ('working_days', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(31)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to='entities.institute')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to='custom_users.student')),
            ],
            options={
                'unique_together': {('student', 'institute')},
            },
        ),
    ]
